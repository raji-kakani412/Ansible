- name: create ec2 and r53 records
  hosts: local
  connection: local
  
  vars:
    subnet_id: subnet-019382cf6e2220a0e
    sg_id: sg-045db632e5800ed92
    ami_id: ami-09c813fb71547fc4f
    instances:
    - mysql
    - backend
    - frontend
    zone: devops-aws.tech

  tasks:
  
  # for installing any python dependencies we need to install them using pip3.9 install <dependencyname>
  - name: ansible install boto3 and botocore
    ansible.builtin.pip:
      name:
      - boto3
      - botocore
      executable: pip3.9

  - name: create ec2 instance
    amazon.aws.ec2_instance:
      name: "{{ item }}"
      vpc_subnet_id: "{{subnet_id}}"
      instance_type: "t3.micro"
      security_group: "{{ sg_id }}"
      image_id: "{{ ami_id }}"
    loop: "{{ instances }}"
    register: ec2_instances

  - name : print the output
    ansible.builtin.debug:
     msg: "{{ ec2_instances }}"

#private ip address
  - name: create r53 private records
    amazon.aws.route53:
      state: present
      zone: "{{ zone }}"
      record: "{{ item.item }}.{{ zone }}" #mysql.devops-aws.tech
      type: A
      ttl: 1
      value: "{{ item.instances[0].private_ip_address }}"
      wait: true
      overwrite: true
    loop: "{{ec2_instances.results}}"

  #public ip address
  - name: create r53 public record
    amazon.aws.route53:
      state: present
      zone: "{{ zone }}"
      record: "{{ zone }}" #devops-aws.tech
      type: A
      ttl: 1
      value: "{{ item.instances[0].public_ip_address }}"
      wait: true
      overwrite: true
    loop: "{{ec2_instances.results}}" 
    when: item.item == "frontend"

